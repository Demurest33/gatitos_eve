---
import { Icon } from 'astro-icon/components';
import { defineConfig } from 'astro/config';

interface Props {
    items: {
        title: string;
        subtitle: string;
        icon: string;
        color?: string;
        bg_img?: string;
    }[];
}

const { items } = Astro.props;

const firstItem = items[0];
items.shift();
---

<div class="flex flex-col flex-grow items-stretch max-w-7xl min-w-md w-full sm:flex-row sm:h-72 sm:overflow-hidden mx-auto">
    <div class="cursor-pointer duration-700 ease-in-out flex-grow m-2 min-h-28 min-w-14 overflow-hidden pane relative rounded-3xl transition-all active">
        <div class="absolute background bg-center bg-cover bg-no-repeat duration-700 ease-in-out inset-0 scale-105 transition-all z-10" style={"background-image: url(" + " /gatitos_eve/img/" + firstItem.bg_img + ");"}></div>
        <div class="absolute bg-gradient-to-b bottom-0 duration-700 ease-in-out from-transparent h-1/2 inset-x-0 opacity-0 shadow to-black transform transition-all translate-y-1/2 z-20"></div>
        <div class="absolute bottom-0 duration-700 ease-in-out flex label left-0 mb-0 ml-3 sm:mb-3 sm:ml-2 transition-all z-30">
            <div class="bg-gray-900 flex h-10 icon items-center justify-center mr-3 rounded-full w-10" style={"color: " + firstItem.color + ";"}>
                <!-- <Icon name={firstItem.icon} /> -->
                
                <div class="tooltip text-right" data-tip="Fallecido">
                    ðŸª¦
                </div>
            </div>
            <div class="content flex flex-col justify-center leading-tight text-white md:whitespace-pre whitespace-pre-wrap">
                <div class="ease-in-out font-bold duration-700 opacity-0 relative transform transition-all translate-x-8">{ firstItem.title }</div>
                <div class="delay-100 duration-700 ease-in-out opacity-0 relative transform transition-all translate-x-8">{ firstItem.subtitle }</div>
            </div>
        </div>
    </div>



    {
        items.map((item, index) => (

            <div class="cursor-pointer duration-700 ease-in-out flex-grow m-2 min-h-28 min-w-14 overflow-hidden pane relative rounded-3xl transition-all">
                    <div class="absolute background bg-center bg-cover bg-no-repeat duration-700 ease-in-out inset-0 scale-105 transition-all z-10"  style={"background-image: url(" + " /gatitos_eve/img/" + firstItem.bg_img + ");"}></div> {/*style={"background-color: " + item.color + ";"} */}
                    <div class="absolute bg-gradient-to-b bottom-0 duration-700 ease-in-out from-transparent h-1/2 inset-x-0 opacity-0 shadow to-black transform transition-all translate-y-1/2 z-20"></div>
                    <div class="absolute bottom-0 duration-700 ease-in-out flex label left-0 mb-0 ml-3 sm:mb-3 sm:ml-2 transition-all z-30">
                        <div class="bg-gray-900 flex h-10 icon items-center justify-center mr-3 rounded-full w-10" style={"color: " + item.color + ";"}>
                            {/* <Icon name={item.icon} /> */}
                            <div class="tooltip text-right" data-tip="Fallecido">
                                ðŸª¦
                            </div>
                        </div>
                        <div class="content flex flex-col justify-center leading-tight text-white sm:whitespace-pre whitespace-pre-wrap">
                            <div class="ease-in-out font-bold duration-700 opacity-0 relative transform transition-all translate-x-8">{ item.title }</div>
                            <div class="delay-100 duration-700 ease-in-out opacity-0 relative transform transition-all translate-x-8">{ item.subtitle }</div>
                        </div>
                    </div>
                </div>
        ))	
    }
</div>

<style>
    .pane.active {
        flex-grow: 10;
        max-width: 100%;
        
        .background {
            transform: scale(1.25, 1.25);
        }

        .label {
            @media (min-width: 640px) {
                transform: translateX(0.5rem);
            }

            .content > * {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .shadow {
            opacity: 0.75;
            transform: translateY(0);
        }
    }

    .cursor-pointer {
    transition-timing-function: cubic-bezier(0.2, 1, 0.25, 1);
    }
    .min-h-14 {
        min-height: 3.5rem;
    }
    .min-w-14 {
        min-width: 3.5rem;
    }
    .bg-gray-900 {
        background-color: #0f1011;
    }
    .pane.active {
        flex-grow: 10;
        max-width: 100%;
    }
    .pane.active .background {
        transform: scale(1.25, 1.25);
    }
    .pane.active .label {
        transform: translateX(0.5rem);
    }
    .pane.active .label .content > * {
        opacity: 1;
        transform: translateX(0);
    }
    .pane.active .shadow {
        opacity: 0.75;
        transform: translateY(0);
    }


</style>

<script>
    const panes = document.querySelectorAll('.pane');
    let activePaneIndex = 0;

    panes.forEach((pane, index) => {
        pane.addEventListener('click', () => {
            panes[activePaneIndex].classList.remove('active');
            activePaneIndex = index;
            panes[activePaneIndex].classList.add('active');
        });
    });
</script>